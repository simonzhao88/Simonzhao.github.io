{"title":"Git版本控制软件的操作","slug":"git版本控制软件的操作","date":"2018-04-23T07:12:25.000Z","updated":"2018-06-05T01:25:30.497Z","comments":true,"path":"api/articles/git版本控制软件的操作.json","photos":[],"link":"","excerpt":"Git — 版本控制分布式版本控制系统 - 社会化编程<br>Git<br>BitMove - BitKeeper集中式版本控制系统 - 版本控制服务器<br>锁定模式<br>   CVS - Concurrent Version System<br>   VSS - Visual Source Safe<br>   ClearCase - IBM - Rational<br>合并模式<br>   Sunversion - SVN","covers":null,"content":"<h1 id=\"Git-—-版本控制\"><a href=\"#Git-—-版本控制\" class=\"headerlink\" title=\"Git — 版本控制\"></a>Git — 版本控制</h1><ol>\n<li>分布式版本控制系统 - 社会化编程<br>Git<br>BitMove - BitKeeper</li>\n<li>集中式版本控制系统 - 版本控制服务器<br>锁定模式<br>   CVS - Concurrent Version System<br>   VSS - Visual Source Safe<br>   ClearCase - IBM - Rational<br>合并模式<br>   Sunversion - SVN</li>\n</ol>\n<a id=\"more\"></a>\n<h3 id=\"git命令\"><a href=\"#git命令\" class=\"headerlink\" title=\"git命令\"></a>git命令</h3><p>git –version 查看git版本  </p>\n<p>设置全局配置 – 身份信息<br>    git config –global user.name ‘Zoie1996’<br>    git config –global user.email <a href=\"mailto:&#39;18086869080@163.com\" target=\"_blank\" rel=\"noopener\">&#39;18086869080@163.com</a>‘</p>\n<p>git init –&gt; /Users/GavinLiu/Desktop/hello/.git/ 初始化 自动创建一个隐藏文件夹</p>\n<p>add 放入暂存区<br>    git add [file]  把文件添加到版本控制<br>        get add . 把当前路径下所有东西纳入版本控制</p>\n<p>commit 提交到本地仓库 - 本地隐藏文件夹<br>    git commit -m ‘创建日历文件’ 将文件放到仓库, 写明更新原因</p>\n<p>git status 查看放在暂存区的文件状态</p>\n<p>git checkout – 撤回所有暂存区文件<br>git checkout – [file] 撤回暂存区文件 </p>\n<p>git log 查看历史版本<br>git log –pretty=oneline 单行显示<br>get reflog 查看版本包括未来版本</p>\n<p>git reset –hard [版本代号前6位]  返回任何一个版本</p>\n<p>远端代码下载<br>    git clone [url] 将远端仓库(代码托管平台)代码克隆到本地<br>    git push origin master 将本地项目推送到服务器 origii-默认(项目在服务器的一个别名) master-主干<br>    git branch [分支file] 创建分支名<br>    git branch 查看分支<br>    git checkout [分支file] 切换到分支<br>    git merge [分支file] 将分支合并到master<br>    get rm [file] 删除文件<br>    git pull 获取服务器更新的代码</p>\n<p>本地代码上传<br>    创建一个空项目 –&gt; 获取url<br>    git remote add orgin [url] 连接远端仓库<br>    git push -u origin master 将本地仓库与远端仓库origin别名对应 第一次提交代码-u<br>    git pull 获取服务器更新的代码</p>\n<p>本地建仓库 → 托管到远端</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdit [dir]</span><br><span class=\"line\">cd [dir]</span><br><span class=\"line\">git init</span><br><span class=\"line\">git add .</span><br><span class=\"line\">get status</span><br><span class=\"line\">git commit -m '说明'</span><br><span class=\"line\">git log</span><br><span class=\"line\">git reset --hard id</span><br><span class=\"line\">git reflog</span><br><span class=\"line\">git remote add origin &lt;url&gt;</span><br><span class=\"line\">git push -u origin master</span><br><span class=\"line\">git pull</span><br></pre></td></tr></table></figure>\n<p>Git日常工作流程  — 远端服务器项目已存在 </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone [url]</span><br><span class=\"line\">cd [dir]</span><br><span class=\"line\"></span><br><span class=\"line\">git branch [分支file] 创建分支名</span><br><span class=\"line\">git branch 查看分支</span><br><span class=\"line\">git checkout [分支file] 切换到分支</span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m '说明'</span><br><span class=\"line\">git push origin [分支file]</span><br><span class=\"line\"></span><br><span class=\"line\">get checkout master 切回到master</span><br><span class=\"line\">git merge [分支file] 将分支合并到master</span><br><span class=\"line\">git push origin master</span><br></pre></td></tr></table></figure>\n","categories":[{"name":"Linux","slug":"Linux","count":4,"path":"api/categories/Linux.json"}],"tags":[{"name":"git版本控制","slug":"git版本控制","count":1,"path":"api/tags/git版本控制.json"}]}