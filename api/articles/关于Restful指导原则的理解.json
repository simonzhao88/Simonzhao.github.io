{"title":"关于Restful指导原则的理解","slug":"关于Restful指导原则的理解","date":"2018-05-15T08:34:10.000Z","updated":"2018-07-14T09:03:38.305Z","comments":true,"path":"api/articles/关于Restful指导原则的理解.json","photos":[],"link":"","excerpt":"前言REST是所有Web应用都应该遵守的架构设计指导原则。Representational State Transfer，翻译是”表现层状态转化”。REST核心: 资源， 状态转移， 统一接口资源: 是REST最明显的特征,是指对某类信息实体的抽象，资源是服务器上一个可命名的抽象概念，资源是以名词为核心来组织的，首先关注的是名词。","covers":["/2018/05/15/关于Restful指导原则的理解/django_rest_method.png"],"content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>REST是所有Web应用都应该遵守的架构设计指导原则。</p>\n<p>Representational State Transfer，翻译是”表现层状态转化”。</p>\n<p>REST核心: <strong>资源， 状态转移， 统一接口</strong></p>\n<p><strong>资源:</strong> 是REST最明显的特征,是指对某类信息实体的抽象，资源是服务器上一个可命名的抽象概念，资源是以名词为核心来组织的，首先关注的是名词。</p>\n<a id=\"more\"></a>\n<p><strong>状态转移:</strong> 是指客户端痛服务端进行交互的过程中，客户端能够通过对资源的表述，实现操作资源的目的</p>\n<p><strong>统一接口:</strong> REST要求，必须通过统一的接口来对资源执行各种操作。对于每个资源只能执行一组有限的操作。 比如，客户端通过HTTP的4个请求方式(POST, GET, PUT, PATCH)来操作资源，也就意味着不管你的url是什么，不管请求的资源是什么但操作的资源接口都是统一的。</p>\n<p>GET用来获取资源，POST用来新建资源（也可以用于更新资源），PUT(PATCH)用来更新资源，DELETE用来删除资源。</p>\n<h4 id=\"1-api定义规范\"><a href=\"#1-api定义规范\" class=\"headerlink\" title=\"1. api定义规范\"></a>1. api定义规范</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://xxx.com/api/</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-资源\"><a href=\"#2-资源\" class=\"headerlink\" title=\"2. 资源\"></a>2. 资源</h4><p>在RESTful架构中，每个网址代表一种资源（resource），所以网址中不能有动词，只能有名词，而且所用的名词往往与数据库的表格名对应。一般来说，数据库中的表都是同种记录的”集合”（collection），所以API中的名词也应该使用复数。</p>\n<p>举例来说，有一个API提供动物园（zoo）的信息，还包括各种动物和雇员的信息，则它的路径应该设计成下面这样。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://api.example.com/v1/zoos</span><br><span class=\"line\"></span><br><span class=\"line\">https://api.example.com/v1/animals</span><br><span class=\"line\"></span><br><span class=\"line\">https://api.example.com/v1/employees</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-http请求方式\"><a href=\"#3-http请求方式\" class=\"headerlink\" title=\"3. http请求方式\"></a>3. http请求方式</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET（SELECT）：从服务器取出资源（一项或多项）</span><br><span class=\"line\"></span><br><span class=\"line\">POST（CREATE）：在服务器新建一个资源</span><br><span class=\"line\"></span><br><span class=\"line\">PUT（UPDATE）：在服务器更新资源（客户端提供改变后的完整资源）</span><br><span class=\"line\"></span><br><span class=\"line\">PATCH（UPDATE）：在服务器更新资源（客户端提供改变的属性）</span><br><span class=\"line\"></span><br><span class=\"line\">DELETE（DELETE）：从服务器删除资源</span><br></pre></td></tr></table></figure>\n<p>例子：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET /zoos：列出所有动物园</span><br><span class=\"line\"></span><br><span class=\"line\">POST /zoos：新建一个动物园</span><br><span class=\"line\"></span><br><span class=\"line\">GET /zoos/ID：获取某个指定动物园的信息</span><br><span class=\"line\"></span><br><span class=\"line\">PUT /zoos/ID：更新某个指定动物园的信息（提供该动物园的全部信息）</span><br><span class=\"line\"></span><br><span class=\"line\">PATCH /zoos/ID：更新某个指定动物园的信息（提供该动物园的部分信息）</span><br><span class=\"line\"></span><br><span class=\"line\">DELETE /zoos/ID：删除某个动物园</span><br><span class=\"line\"></span><br><span class=\"line\">GET /zoos/ID/animals：列出某个指定动物园的所有动物</span><br><span class=\"line\"></span><br><span class=\"line\">DELETE /zoos/ID/animals/ID：删除某个指定动物园的指定动物</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-filter过滤\"><a href=\"#4-filter过滤\" class=\"headerlink\" title=\"4. filter过滤\"></a>4. filter过滤</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?page=2&amp;per_page=100：指定第几页，以及每页的记录数。</span><br><span class=\"line\"></span><br><span class=\"line\">?sortby=name&amp;order=asc：指定返回结果按照哪个属性排序，以及排序顺序。</span><br><span class=\"line\"></span><br><span class=\"line\">?animal_type_id=1：指定筛选条件</span><br></pre></td></tr></table></figure>\n<h4 id=\"5-状态码\"><a href=\"#5-状态码\" class=\"headerlink\" title=\"5. 状态码\"></a>5. 状态码</h4><p>服务端向用户返回请求api的结果，在结果中包含了status codes 状态码的，可以通过状态码去判断请求api的状态是成功还是失败</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">200 OK - [GET]：服务器成功返回用户请求的数据，该操作是幂等的（Idempotent）。</span><br><span class=\"line\"></span><br><span class=\"line\">201 CREATED - [POST/PUT/PATCH]：用户新建或修改数据成功。</span><br><span class=\"line\"></span><br><span class=\"line\">202 Accepted - [*]：表示一个请求已经进入后台排队（异步任务）</span><br><span class=\"line\"></span><br><span class=\"line\">204 NO CONTENT - [DELETE]：用户删除数据成功。</span><br><span class=\"line\"></span><br><span class=\"line\">400 INVALID REQUEST - [POST/PUT/PATCH]：用户发出的请求有错误，服务器没有进行新建或修改数据的操作，该操作是幂等的。</span><br><span class=\"line\"></span><br><span class=\"line\">401 Unauthorized - [*]：表示用户没有权限（令牌、用户名、密码错误）。</span><br><span class=\"line\"></span><br><span class=\"line\">403 Forbidden - [*] 表示用户得到授权（与401错误相对），但是访问是被禁止的。</span><br><span class=\"line\"></span><br><span class=\"line\">404 NOT FOUND - [*]：用户发出的请求针对的是不存在的记录，服务器没有进行操作，该操作是幂等的。</span><br><span class=\"line\"></span><br><span class=\"line\">406 Not Acceptable - [GET]：用户请求的格式不可得（比如用户请求JSON格式，但是只有XML格式）。</span><br><span class=\"line\"></span><br><span class=\"line\">410 Gone -[GET]：用户请求的资源被永久删除，且不会再得到的。</span><br><span class=\"line\"></span><br><span class=\"line\">422 Unprocesable entity - [POST/PUT/PATCH] 当创建一个对象时，发生一个验证错误。</span><br><span class=\"line\"></span><br><span class=\"line\">500 INTERNAL SERVER ERROR - [*]：服务器发生错误，用户将无法判断发出的请求是否成功。</span><br></pre></td></tr></table></figure>\n<h4 id=\"6-错误处理\"><a href=\"#6-错误处理\" class=\"headerlink\" title=\"6. 错误处理\"></a>6. 错误处理</h4><p>如果状态码是4xx，就应该向用户返回出错信息。一般来说，返回的信息中将error作为键名，出错信息作为键值即可。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\terror: &apos;错误信息&apos;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"7-django中使用restful\"><a href=\"#7-django中使用restful\" class=\"headerlink\" title=\"7. django中使用restful\"></a>7. django中使用restful</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install djangorestframework</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">pip install django-filter  # Filtering support</span><br></pre></td></tr></table></figure>\n<h4 id=\"8-简单的CRUD\"><a href=\"#8-简单的CRUD\" class=\"headerlink\" title=\"8. 简单的CRUD\"></a>8. 简单的CRUD</h4><p>导入相关的信息：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from rest_framework import mixins, viewsets</span><br></pre></td></tr></table></figure>\n<p><img src=\"/2018/05/15/关于Restful指导原则的理解/django_rest_method.png\" alt=\"图\"></p>\n<p>CRUD对应的增删改查：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">增： POST http://127.0.0.1:8080/stu/addStu/</span><br><span class=\"line\"></span><br><span class=\"line\">删： DELETE http://127.0.0.1:8080/stu/addStu/1/</span><br><span class=\"line\"></span><br><span class=\"line\">改： UPDATE http://127.0.0.1:8080/stu/addStu/1/</span><br><span class=\"line\"></span><br><span class=\"line\">查： GET http://127.0.0.1:8080/stu/addStu/1/</span><br></pre></td></tr></table></figure>","categories":[{"name":"Restful","slug":"Restful","count":1,"path":"api/categories/Restful.json"}],"tags":[{"name":"Restful","slug":"Restful","count":1,"path":"api/tags/Restful.json"}]}