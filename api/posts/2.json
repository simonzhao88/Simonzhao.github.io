{"total":19,"pageSize":5,"pageCount":4,"data":[{"title":"关于Restful指导原则的理解","slug":"关于Restful指导原则的理解","date":"2018-05-15T08:34:10.000Z","updated":"2018-07-14T09:03:38.305Z","comments":true,"path":"api/articles/关于Restful指导原则的理解.json","excerpt":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>REST是所有Web应用都应该遵守的架构设计指导原则。</p>\n<p>Representational State Transfer，翻译是”表现层状态转化”。</p>\n<p>REST核心: <strong>资源， 状态转移， 统一接口</strong></p>\n<p><strong>资源:</strong> 是REST最明显的特征,是指对某类信息实体的抽象，资源是服务器上一个可命名的抽象概念，资源是以名词为核心来组织的，首先关注的是名词。</p>","keywords":null,"cover":"/2018/05/15/关于Restful指导原则的理解/django_rest_method.png","content":null,"text":"前言REST是所有Web应用都应该遵守的架构设计指导原则。Representational State Transfer，翻译是”表现层状态转化”。REST核心: 资源， 状态转移， 统一接口资源: 是REST最明显的特征,是指对某类信息实体的抽象，资源是服务器上一个可命名的抽象","link":"","raw":null,"photos":[],"categories":[{"name":"Restful","slug":"Restful","count":1,"path":"api/categories/Restful.json"}],"tags":[{"name":"Restful","slug":"Restful","count":1,"path":"api/tags/Restful.json"}]},{"title":"Django中模型的设计","slug":"Django中模型的设计","date":"2018-05-12T03:01:50.000Z","updated":"2018-07-16T03:45:49.596Z","comments":true,"path":"api/articles/Django中模型的设计.json","excerpt":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a><strong>前言</strong></h2><p>​    Django对数据库提供了很好的支持，对不同的数据库,django提供了统一调用的API，我们可以根据不同的业务需求使用不同是数据库。Django中引入了ORM(Objects Relational Mapping)对象关系映射，是一种程序技术。在下面会详细的讲解。</p>","keywords":null,"cover":"/2018/05/12/Django中模型的设计/django_models.jpg","content":null,"text":"前言​    Django对数据库提供了很好的支持，对不同的数据库,django提供了统一调用的API，我们可以根据不同的业务需求使用不同是数据库。Django中引入了ORM(Objects Relational Mapping)对象关系映射，是一种程序技术。在下面会详细的讲解。","link":"","raw":null,"photos":[],"categories":[{"name":"Django","slug":"Django","count":7,"path":"api/categories/Django.json"}],"tags":[{"name":"Django","slug":"Django","count":6,"path":"api/tags/Django.json"}]},{"title":"Django中模型的关系设计(一)","slug":"Django中模型的关系设计","date":"2018-05-12T03:01:50.000Z","updated":"2018-07-14T09:02:06.040Z","comments":true,"path":"api/articles/Django中模型的关系设计.json","excerpt":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>​    该文档中主要介绍模型的对应关系，一对一，一对多，以及多对多的关系。并且举例说明 模型对应关系描述如下： 1：1 一对一 OneToOneField 1：N 一对多 ForeignKey M：N 多对多 ManyToManyField 常见的几种数据关系，django都提供了很好的支持。</p>","keywords":null,"cover":null,"content":null,"text":"前言​    该文档中主要介绍模型的对应关系，一对一，一对多，以及多对多的关系。并且举例说明 模型对应关系描述如下： 1：1 一对一 OneToOneField 1：N 一对多 ForeignKey M：N 多对多 ManyToManyField 常见的几种数据关系，django","link":"","raw":null,"photos":[],"categories":[{"name":"Django","slug":"Django","count":7,"path":"api/categories/Django.json"}],"tags":[{"name":"Django、ORM","slug":"Django、ORM","count":1,"path":"api/tags/Django、ORM.json"}]},{"title":"windows下如何一步一步搭建Django项目","slug":"如何一步一步搭建Django项目","date":"2018-05-11T11:36:22.000Z","updated":"2018-06-05T01:45:24.361Z","comments":true,"path":"api/articles/如何一步一步搭建Django项目.json","excerpt":"<h3 id=\"1-安装虚拟环境\"><a href=\"#1-安装虚拟环境\" class=\"headerlink\" title=\"1.安装虚拟环境\"></a>1.安装虚拟环境</h3><p>​    首先，要确保的是你的电脑已经安装了Python和pip包，如果没有安装，那么请移步百老师将Python环境搭建好！有了Python环境后，接下来我们就正式安装虚拟环境了。</p>\n<p>​    <strong>为什么要安装虚拟环境呢？</strong> 首先是每个项目所需要的环境不一样，如果我们每个项目都使用一个环境，那么环境必然是复杂臃肿的，其次，某些项目需要不同的版本，比如Python2、Python3和Django1.x、Django2.x等。</p>\n<p>​    好了，正式开始！</p>","keywords":null,"cover":"/2018/05/11/如何一步一步搭建Django项目/./项目目录.png","content":null,"text":"1.安装虚拟环境​    首先，要确保的是你的电脑已经安装了Python和pip包，如果没有安装，那么请移步百老师将Python环境搭建好！有了Python环境后，接下来我们就正式安装虚拟环境了。​    为什么要安装虚拟环境呢？ 首先是每个项目所需要的环境不一样，如果我们每个项","link":"","raw":null,"photos":[],"categories":[{"name":"Django","slug":"Django","count":7,"path":"api/categories/Django.json"}],"tags":[{"name":"Django","slug":"Django","count":6,"path":"api/tags/Django.json"}]},{"title":"Django初识","slug":"Django的初识","date":"2018-05-10T07:01:50.000Z","updated":"2018-06-05T01:44:30.249Z","comments":true,"path":"api/articles/Django的初识.json","excerpt":"<h3 id=\"1-Django简介：\"><a href=\"#1-Django简介：\" class=\"headerlink\" title=\"1.Django简介：\"></a>1.Django简介：</h3><p>Django发布于2005年7月，是当前Python世界里最有名且成熟的网络框架。 最初是被开发用于管理劳伦斯出版集团旗下的以新闻内容为主的网站的，即CMS(内容管理系统)软件。</p>\n<p>Django是一个用Python编写的开放源代码的Web应用框架，代码是开源的。此系统采用了MVC的框架模式, 也可以称为MTV模式</p>\n<p>具体介绍详见<a href=\"https://www.djangoproject.com/\" target=\"_blank\" rel=\"noopener\">Django官网</a></p>\n<hr>","keywords":null,"cover":"/2018/05/10/Django的初识/./django1.jpg","content":null,"text":"1.Django简介：Django发布于2005年7月，是当前Python世界里最有名且成熟的网络框架。 最初是被开发用于管理劳伦斯出版集团旗下的以新闻内容为主的网站的，即CMS(内容管理系统)软件。Django是一个用Python编写的开放源代码的Web应用框架，代码是开源的。","link":"","raw":null,"photos":[],"categories":[{"name":"Django","slug":"Django","count":7,"path":"api/categories/Django.json"}],"tags":[{"name":"Django","slug":"Django","count":6,"path":"api/tags/Django.json"}]}]}